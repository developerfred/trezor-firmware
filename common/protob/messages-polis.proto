syntax = "proto2";
package hw.trezor.messages.polis;

// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessagePolis";

import "messages-common.proto";


/**
 * Request: Ask device for public key corresponding to address_n path
 * @start
 * @next PolisPublicKey
 * @next Failure
 */
message PolisGetPublicKey {
    repeated uint32 address_n = 1;                                      // BIP-32 path to derive the key from master node
    optional bool show_display = 2;                                     // optionally show on display before sending the result
}

/**
 * Response: Contains public key derived from device private seed
 * @end
 */
message PolisPublicKey {
    optional hw.trezor.messages.common.HDNodeType node = 1;        // BIP32 public node
    optional string xpub = 2;        // serialized form of public node
}

/**
 * Request: Ask device for Polis address corresponding to address_n path
 * @start
 * @next PolisAddress
 * @next Failure
 */
message PolisGetAddress {
    repeated uint32 address_n = 1;  // BIP-32 path to derive the key from master node
    optional bool show_display = 2; // optionally show on display before sending the result
}

/**
 * Response: Contains an Polis address derived from device private seed
 * @end
 */
message PolisAddress {
    optional string address = 1;                       // Polis address as bech32 string
}